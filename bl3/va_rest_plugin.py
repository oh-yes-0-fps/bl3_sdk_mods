from __future__ import annotations  # type: ignore
from unrealsdk import unreal
from typing import Any
import enum


from . import engine


class VaRestJsonObject(unreal.UObject):

    def SetStringField(self, FieldName: str, StringValue: str): ...
    def SetStringArrayField(
        self, FieldName: str, StringArray: unreal.WrappedArray[str]
    ): ...
    def SetObjectField(self, FieldName: str, JsonObject: VaRestJsonObject): ...
    def SetObjectArrayField(
        self, FieldName: str, ObjectArray: unreal.WrappedArray[VaRestJsonObject]
    ): ...
    def SetNumberField(self, FieldName: str, Number: float): ...
    def SetNumberArrayField(
        self, FieldName: str, NumberArray: unreal.WrappedArray[float]
    ): ...
    def SetField(self, FieldName: str, JsonValue: VaRestJsonValue): ...
    def SetBoolField(self, FieldName: str, InValue: bool): ...
    def SetBoolArrayField(
        self, FieldName: str, BoolArray: unreal.WrappedArray[bool]
    ): ...
    def SetArrayField(
        self, FieldName: str, inArray: unreal.WrappedArray[VaRestJsonValue]
    ): ...
    def Reset(self): ...
    def RemoveField(self, FieldName: str): ...
    def MergeJsonObject(self, InJsonObject: VaRestJsonObject, Overwrite: bool): ...
    def HasField(self, FieldName: str) -> bool: ...
    def GetStringField(self, FieldName: str) -> str: ...
    def GetStringArrayField(self, FieldName: str) -> unreal.WrappedArray[str]: ...
    def GetObjectField(self, FieldName: str) -> VaRestJsonObject: ...
    def GetObjectArrayField(
        self, FieldName: str
    ) -> unreal.WrappedArray[VaRestJsonObject]: ...
    def GetNumberField(self, FieldName: str) -> float: ...
    def GetNumberArrayField(self, FieldName: str) -> unreal.WrappedArray[float]: ...
    def GetFieldNames(self) -> unreal.WrappedArray[str]: ...
    def GetField(self, FieldName: str) -> VaRestJsonValue: ...
    def GetBoolField(self, FieldName: str) -> bool: ...
    def GetBoolArrayField(self, FieldName: str) -> unreal.WrappedArray[bool]: ...
    def GetArrayField(self, FieldName: str) -> unreal.WrappedArray[VaRestJsonValue]: ...
    def EncodeJsonToSingleString(self) -> str: ...
    def EncodeJson(self) -> str: ...
    def DecodeJson(self, JsonString: str) -> bool: ...
    def ConstructJsonObject(
        self, WorldContextObject: unreal.UObject
    ) -> VaRestJsonObject: ...


class VaRestJsonValue(unreal.UObject):

    def IsNull(self) -> bool: ...
    def GetTypeString(self) -> str: ...
    def GetType(self) -> int: ...
    def ConstructJsonValueString(
        self, WorldContextObject: unreal.UObject, StringValue: str
    ) -> VaRestJsonValue: ...
    def ConstructJsonValueObject(
        self, WorldContextObject: unreal.UObject, JsonObject: VaRestJsonObject
    ) -> VaRestJsonValue: ...
    def ConstructJsonValueNumber(
        self, WorldContextObject: unreal.UObject, Number: float
    ) -> VaRestJsonValue: ...
    def ConstructJsonValueBool(
        self, WorldContextObject: unreal.UObject, InValue: bool
    ) -> VaRestJsonValue: ...
    def ConstructJsonValueArray(
        self,
        WorldContextObject: unreal.UObject,
        inArray: unreal.WrappedArray[VaRestJsonValue],
    ) -> VaRestJsonValue: ...
    def AsString(self) -> str: ...
    def AsObject(self) -> VaRestJsonObject: ...
    def AsNumber(self) -> float: ...
    def AsBool(self) -> bool: ...
    def AsArray(self) -> unreal.WrappedArray[VaRestJsonValue]: ...


class VaRestLibrary(engine.BlueprintFunctionLibrary):

    def PercentEncode(self, Source: str) -> str: ...
    def CallURL(
        self,
        WorldContextObject: unreal.UObject,
        URL: str,
        Verb: ERequestVerb,
        ContentType: ERequestContentType,
        VaRestJson: VaRestJsonObject,
        Callback: Any,
    ): ...
    def Base64EncodeData(self, Data: unreal.WrappedArray[int], Dest: str) -> bool: ...
    def Base64Encode(self, Source: str) -> str: ...
    def Base64DecodeData(self, Source: str, Dest: unreal.WrappedArray[int]) -> bool: ...
    def Base64Decode(self, Source: str, Dest: str) -> bool: ...


class VaRestRequestJSON(unreal.UObject):
    OnRequestComplete: Any
    OnRequestFail: Any
    ResponseContent: str
    bIsValidJsonResponse: bool
    RequestJsonObj: VaRestJsonObject
    ResponseJsonObj: VaRestJsonObject

    def SetVerb(self, Verb: ERequestVerb): ...
    def SetStringRequestContent(self, Content: str): ...
    def SetResponseObject(self, JsonObject: VaRestJsonObject): ...
    def SetRequestObject(self, JsonObject: VaRestJsonObject): ...
    def SetHeader(self, HeaderName: str, HeaderValue: str): ...
    def SetCustomVerb(self, Verb: str): ...
    def SetContentType(self, ContentType: ERequestContentType): ...
    def SetBinaryRequestContent(self, Content: unreal.WrappedArray[int]): ...
    def SetBinaryContentType(self, ContentType: str): ...
    def ResetResponseData(self): ...
    def ResetRequestData(self): ...
    def ResetData(self): ...
    def RemoveTag(self, Tag: str) -> int: ...
    def ProcessURL(self, URL: str): ...
    def HasTag(self, Tag: str) -> bool: ...
    def GetUrl(self) -> str: ...
    def GetStatus(self) -> ERequestStatus: ...
    def GetResponseObject(self) -> VaRestJsonObject: ...
    def GetResponseHeader(self, HeaderName: str) -> str: ...
    def GetResponseCode(self) -> int: ...
    def GetRequestObject(self) -> VaRestJsonObject: ...
    def GetAllResponseHeaders(self) -> unreal.WrappedArray[str]: ...
    def ConstructRequestExt(
        self,
        WorldContextObject: unreal.UObject,
        Verb: ERequestVerb,
        ContentType: ERequestContentType,
    ) -> VaRestRequestJSON: ...
    def ConstructRequest(
        self, WorldContextObject: unreal.UObject
    ) -> VaRestRequestJSON: ...
    def Cancel(self): ...
    def ApplyURL(
        self,
        URL: str,
        Result: VaRestJsonObject,
        WorldContextObject: unreal.UObject,
        LatentInfo: engine.LatentActionInfo,
    ): ...
    def AddTag(self, Tag: str): ...


class VaRestCallResponse:
    Request: VaRestRequestJSON
    WorldContextObject: unreal.UObject
    Callback: Any


class EVaJson(enum.Enum):
    Null = 0
    String = 1
    Boolean = 2


class ERequestStatus(enum.Enum):
    Processing = 0
    Failed = 1
    Succeeded = 2


class ERequestContentType(enum.Enum):
    x_www_form_urlencoded_body = 0
    ERequestContentType_MAX = 1
    json = 2


class ERequestVerb(enum.Enum):
    POST = 0
    CUSTOM = 1
    PUT = 2
